apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
  namespace: telemetry
  labels:
    app: tempo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
    spec:
      initContainers:
      - name: init-tempo
        image: grafana/tempo:main-9da00a2
        command: ["chown", "10001:10001", "/var/tempo"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: tempo-data
          mountPath: /var/tempo
          readOnly: false
      containers:
      - name: tempo
        image: grafana/tempo:main-9da00a2
        args:
        - "-config.file=/etc/tempo.yaml"
        ports:
        - containerPort: 3200
          name: tempo
        - containerPort: 14317
          name: otlp-grpc
        volumeMounts:
        - name: tempo-config
          mountPath: /etc/tempo.yaml
          subPath: tempo.yaml
        - name: tempo-data
          mountPath: /var/tempo
          readOnly: false
      volumes:
      - name: tempo-config
        configMap:
          name: tempo-config
      - name: tempo-data
        persistentVolumeClaim:
          claimName: tempo-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: telemetry
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      initContainers:
      - name: init-loki
        image: grafana/loki:main-1427b01
        command: ["chown", "-R", "10001:10001", "/data/loki"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: loki-data
          mountPath: /data/loki
          readOnly: false
      containers:
      - name: loki
        image: grafana/loki:main-1427b01
        args:
        - "-config.file=/etc/loki/local-config.yaml"
        securityContext:
          runAsUser: 10001
          runAsGroup: 10001
        ports:
        - containerPort: 3100
          name: loki
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki/local-config.yaml
          subPath: loki-config.yaml
        - name: loki-data
          mountPath: /data/loki
          readOnly: false
      volumes:
      - name: loki-config
        configMap:
          name: loki-config
      - name: loki-data
        persistentVolumeClaim:
          claimName: loki-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: telemetry
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      initContainers:
      - name: init-prometheus
        image: prom/prometheus:v3.4.1
        command: ["chown", "-R", "65534:65534", "/prometheus"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: prometheus-data
          mountPath: /prometheus
          readOnly: false
      containers:
      - name: prometheus
        image: prom/prometheus:v3.4.1
        args:
        - --config.file=/etc/prometheus.yaml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=48h
        - --storage.tsdb.min-block-duration=30m
        - --storage.tsdb.max-block-duration=2h
        - --web.enable-remote-write-receiver
        - --web.enable-otlp-receiver
        - --enable-feature=exemplar-storage
        - --enable-feature=native-histograms
        - --enable-feature=otlp-deltatocumulative
        ports:
        - containerPort: 9090
          name: prometheus
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus.yaml
          subPath: prometheus.yaml
        - name: prometheus-data
          mountPath: /prometheus
          readOnly: false
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-data-pvc
